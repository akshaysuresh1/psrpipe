# Calculate median bandpass from a chunk of data and compute bandpass fits over subbands (if specified).

[data]
file_type = filterbank ; File type (filterbank/psrfits)
data_file = spliced_blc404243444546o7o0515253545556o7o0616263646566o7o071727374757677_guppi_58733_84767_BLGCsurvey_Cband_A00_0138.rawspec.8.0003.fil ; File name or glob file string
DATA_DIR = /home/ella2/asuresh/BLGC_data/ ; Path to data

[output]
basename = guppi_58733_84767_BLGCsurvey_Cband_A00_0138 ; Basename for output plots or data products
OUTPUT_DIR = /home/ella1/asuresh/BL_GC_Survey/Bandpass/ ; Output path (created if non-existent)

[plotting]
show_plot = False ; Do you want to view the plots live during execution? (True/False) (d: False)

# Polarization index to extract (0 = Stokes-I, 1 = Stokes-Q, 2 = Stokes-U, 3 = Stokes-V)
[polarization]
pol =               ; Integer (d: 0)

[timerange]
start_time = 1.0 ; Float: Start time (s) of data chunk to be loaded (d: 0)
duration = 60.0 ; Float: Duration (s) of data to be loaded (d: length of full data set)

# Frequency ranges (GHz) to extract.
# Specify [low freq, high freq] for each subband. Order subbands from highest to lowest frequency.
# Example: freqs_extract = [[7.19,7.81],[6.10,6.90],[5.10,5.90],[4.35, 4.85]]
[subbands]
freqs_extract = [[7.19,7.81],[6.10,6.90],[5.10,5.90],[4.35, 4.85]] ; (d: None)

# Calculate smooth bandpass shapes over above specified subbands.
[savgol_filter]
window_length = 53 ; Must be an odd integer (d: 1). If not, nearest odd integer greater than given value is chosen.
poly_degree = 1    ; Polynomial degree (integer >= 1) (d: 1)
